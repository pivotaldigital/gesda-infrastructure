{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specify a location for the resources."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "gesda-bc8f815183-vnet"
        },
        "subnetForApp": {
            "type": "string",
            "defaultValue": "gesda-bc8f815183-appsubnet"
        },
        "subnetForDb": {
            "type": "string",
            "defaultValue": "gesda-bc8f815183-dbsubnet"
        },
        "registryName": {
            "type": "string"
        },
        "registryLocation": {
            "type": "string"
        },
        "zoneRedundancy": {
            "type": "string"
        },
        "registrySku": {
            "type": "string"
        },
        "registryPublicNetworkAccess": {
            "type": "string"
        },
        "kvName": {
            "type": "string"
        },
        "kvSku": {
            "type": "string"
        },
        "kvAccessPolicies": {
            "type": "array"
        },
        "kvEnabledForDeployment": {
            "type": "bool"
        },
        "kvEnabledForTemplateDeployment": {
            "type": "bool"
        },
        "kvEnabledForDiskEncryption": {
            "type": "bool"
        },
        "kvEnableRbacAuthorization": {
            "type": "bool"
        },
        "kvPublicNetworkAccess": {
            "type": "string"
        },
        "kvEnableSoftDelete": {
            "type": "bool"
        },
        "kvSoftDeleteRetentionInDays": {
            "type": "int"
        },
        "kvNetworkAcls": {
            "type": "object"
        }
    },
    "variables": {
        "vnetDeploymentApiVersion": "2020-07-01",
        "vnetAddress": "10.0.0.0/23",
        "registryApiVersion": "2022-02-01-preview",
        "keyVaultApiVersion": "2022-02-01-preview",
        "tenantId": "[tenant().tenantId]"
    },
    "resources": [
        {
            "apiVersion": "[variables('registryApiVersion')]",
            "name": "[parameters('registryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "location": "[parameters('registryLocation')]",
            "sku": {
                "name": "[parameters('registrySku')]"
            },
            "properties": {
                "publicNetworkAccess": "[parameters('registryPublicNetworkAccess')]",
                "zoneRedundancy": "[parameters('zoneRedundancy')]"
            }
        },
        {
            "apiVersion": "[variables('keyVaultApiVersion')]",
            "name": "[parameters('kvName')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": "[parameters('kvEnabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('kvEnabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('kvEnabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('kvEnableRbacAuthorization')]",
                "accessPolicies": "[parameters('kvAccessPolicies')]",
                "tenantId": "[variables('tenantId')]",
                "sku": {
                    "name": "[parameters('kvSku')]",
                    "family": "A"
                },
                "publicNetworkAccess": "[parameters('kvPublicNetworkAccess')]",
                "enableSoftDelete": "[parameters('kvEnableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('kvSoftDeleteRetentionInDays')]",
                "networkAcls": "[parameters('kvNetworkAcls')]"
            },
            "tags": {},
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "[variables('vnetDeploymentApiVersion')]",
            "location": "[parameters('location')]",
            "name": "[parameters('vnetName')]",
            "tags": {
                "AppProfile": "Wordpress",
                "WordPressDeploymentID": "gesda-bc8f815183"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddress')]"
                    ]
                },
                "subnets": []
            },
            "dependsOn": []
        },
        {
            "condition": true,
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2021-03-01",
            "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnetForApp'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/25",
                "delegations": [
                    {
                        "name": "dlg-appService",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                        }
                    }
                ]
            }
        },
        {
            "condition": true,
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2021-03-01",
            "name": "[format('{0}/{1}',parameters('vnetName'), parameters('subnetForDb'))]",
            "properties": {
                "addressPrefix": "10.0.1.0/25",
                "delegations": [
                    {
                        "name": "dlg-appService",
                        "properties": {
                            "serviceName": "Microsoft.DBforMySQL/flexibleServers"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetForApp'))]"
            ]
        }
    ],
    "outputs": {
        "tenantResult": {
            "type": "string",
            "value": "[variables('tenantId')]"
        }
    }
}